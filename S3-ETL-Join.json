{"paragraphs":[{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579709805382_2029391740","id":"20200122-101645_1227453995","dateCreated":"2020-01-22T10:16:45-0600","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:796","text":"import sys\nfrom awsglue.transforms import *\nfrom awsglue.utils import getResolvedOptions\nfrom pyspark.context import SparkContext\nfrom awsglue.context import GlueContext\nfrom awsglue.job import Job\n\n## @params: [JOB_NAME]\nargs = getResolvedOptions(sys.argv, ['JOB_NAME'])\n\nsc = SparkContext()\nglueContext = GlueContext(sc)\nspark = glueContext.spark_session\njob = Job(glueContext)\njob.init(args['JOB_NAME'], args)\n## @type: DataSource\n## @args: [database = \"testdb\", table_name = \"fc_meter_2\", transformation_ctx = \"datasource0\"]\n## @return: datasource0\n## @inputs: []\ndatasource0 = glueContext.create_dynamic_frame.from_catalog(database = \"testdb\", table_name = \"fc_meter_2\", transformation_ctx = \"datasource0\")\n## @type: DataSource\n## @args: [database = \"testdb\", table_name = \"fc_meter\", transformation_ctx = \"datasource0\"]\n## @return: datasource1\n## @inputs: []\ndatasource1 = glueContext.create_dynamic_frame.from_catalog(database = \"testdb\", table_name = \"fc_meter\", transformation_ctx = \"datasource1\")\n## @type: Join\n## @args: [keys1 = \"meter_number_index\", keys2 = \"meter_number_index\"]\n## @return: join2\n## @inputs: [frame1 = datasource0, frame2 = datasource1]\njoin2 = Join.apply(frame1 = datasource0, frame2 = datasource1, keys1 = \"meter_number_index\", keys2 = \"meter_number_index\", transformation_ctx = \"join2\")\n## @type: DataSource\n## @args: [database = \"testdb\", table_name = \"meters\", transformation_ctx = \"datasource3\"]\n## @return: datasource3\n## @inputs: [frame = join2]\ndatasource3 = glueContext.create_dynamic_frame.from_catalog(database = \"testdb\", table_name = \"meters\", transformation_ctx = \"datasource3\")\n## @type: Join\n## @args: [keys1 = \"meter_number\", keys2 = \"number\"]\n## @return: join4\n## @inputs: [frame1 = join2, frame2 = datasource3]\njoin4 = Join.apply(frame1 = join2, frame2 = datasource3, keys1 = \"meter_number\", keys2 = \"number\", transformation_ctx = \"join4\")\n## @type: DataSink\n## @args: [connection_type = \"s3\", connection_options = {\"path\": \"s3://enlink-edp-ufd-bidev/Glue-test-naveen/csvDest\"}, format = \"csv\", transformation_ctx = \"datasink5\"]\n## @return: datasink5\n## @inputs: [frame = join4]\ndatasink5 = glueContext.write_dynamic_frame.from_options(frame = join4, connection_type = \"s3\", connection_options = {\"path\": \"s3://enlink-edp-ufd-bidev/Glue-test-naveen/csvDest\"}, format = \"csv\", transformation_ctx = \"datasink5\")\n## @type: DataSink\n## @args: [connection_type = \"s3\", connection_options = {\"path\":\"s3://enlink-edp-ufd-bidev/Glue-test-naveen/ParqDest\"}, format = \"parquet\", transformation_ctx = \"datasink5\"]\n## @return: datasink6\n## @inputs: [frame = join4]\ndatasink6 = glueContext.write_dynamic_frame.from_options(frame = join4, connection_type = \"s3\", connection_options = {\"path\":\"s3://enlink-edp-ufd-bidev/Glue-test-naveen/ParqDest\"}, format = \"parquet\", transformation_ctx = \"datasink6\")\njob.commit()\n","dateUpdated":"2020-01-22T10:16:52-0600"}],"name":"S3-ETL-Join","id":"2EYRM79BT","noteParams":{},"noteForms":{},"angularObjects":{"spark:existing_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}